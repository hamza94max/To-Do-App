import io.gitlab.arturbosch.detekt.Detekt

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("androidx.navigation.safeargs.kotlin")
    id 'kotlin-kapt'
    id 'io.gitlab.arturbosch.detekt'
    id("dagger.hilt.android.plugin")
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.hamza.todoapp"
        minSdk 21
        targetSdk 32
        multiDexEnabled true
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding{
        enabled true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Splash
    implementation 'androidx.core:core-splashscreen:1.0.0'

    // recyclerView
    implementation("androidx.recyclerview:recyclerview:1.2.1")

    // Navigation
    def nav_version = "2.5.1"
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    def roomVersion = "2.4.3"
    implementation("androidx.room:room-runtime:$roomVersion")
    kapt("androidx.room:room-compiler:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")

    // Local Unit Tests
    implementation "androidx.test:core:1.4.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "org.mockito:mockito-core:3.11.2"

    // leak canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    // Detekt
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.21.0"


    // hilt
    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")


    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'


    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.28.1"

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "org.mockito:mockito-core:3.11.2"
}

task detektFormatting(type: Detekt){
    description = "Runs autocorrect enabled detekt build."
    source = files("src/main/java")
    reports{
        html{
            enabled = true
            destination = file("build/reports/detekt-formatted.html")
        }
    }
    parallel = true
    autoCorrect = true
}
